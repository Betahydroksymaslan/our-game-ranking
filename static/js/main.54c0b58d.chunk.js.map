{"version":3,"sources":["firebase/firebase.js","store/store.js","Components/Navigation/Navigation.js","assets/images/kacperPhoto.PNG","assets/images/karolPhoto.PNG","assets/images/justynaPhoto.PNG","assets/images/coronaIcon.svg","Components/HomePage/HomePage.js","Components/App/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AppContext","createContext","Store","children","Provider","value","Navigation","className","to","HomePage","src","KacperPhoto","alt","CoronaImg","KarolPhoto","JustynaPhoto","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.54c0b58d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCHFG4J2mf_3Axbo8ND7diX2nOZm293gsk\",\r\n  authDomain: \"our-game-ranking.firebaseapp.com\",\r\n  databaseURL: \"https://our-game-ranking-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"our-game-ranking\",\r\n  storageBucket: \"our-game-ranking.appspot.com\",\r\n  messagingSenderId: \"118353229617\",\r\n  appId: \"1:118353229617:web:8fc80354023366c55c6210\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { createContext } from \"react\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport \"firebase/database\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst Store = ({ children }) => {\r\n   \r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        \r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Store;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n    return ( \r\n        <nav className=\"Nav\">\r\n            <Link className=\"Nav__link\" to=\"/our-game-ranking/ppg\">\r\n                PPG\r\n            </Link>\r\n\r\n            <Link className=\"Nav__link Nav__link--active\" to=\"/our-game-ranking/ppg\">\r\n                standard\r\n            </Link>\r\n\r\n            <Link className=\"Nav__link\" to=\"/our-game-ranking/ppg\">\r\n                PPS\r\n            </Link>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/kacperPhoto.56924c77.PNG\";","export default __webpack_public_path__ + \"static/media/karolPhoto.4350ffc9.PNG\";","export default __webpack_public_path__ + \"static/media/justynaPhoto.4e838dfe.PNG\";","export default __webpack_public_path__ + \"static/media/coronaIcon.ba990780.svg\";","import React from \"react\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport KacperPhoto from \"../../assets/images/kacperPhoto.PNG\";\r\nimport KarolPhoto from \"../../assets/images/karolPhoto.PNG\";\r\nimport JustynaPhoto from \"../../assets/images/justynaPhoto.PNG\";\r\nimport CoronaImg from \"../../assets/images/coronaIcon.svg\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"HomePage\">\r\n      <h2 className=\"HomePage__header\">Leaderboard</h2>\r\n      <Navigation />\r\n      <div className=\"HomePage__leadersWrapper\">\r\n        <div className=\"HomePage__thirdPlace\">\r\n          <span className=\"HomePage__placeNumber\">3</span>\r\n          <div className=\"HomePage__symbol\">></div>\r\n          <div className=\"HomePage__image\">\r\n            <img className=\"HomePage__imageSrc\" src={KacperPhoto} alt=\"\" />\r\n          </div>\r\n          <span className=\"HomePage__nickname\">Kacper</span>\r\n          <span className=\"HomePage__points\">43</span>\r\n        </div>\r\n\r\n        <div className=\"HomePage__firstPlace\">\r\n          <span className=\"HomePage__placeNumber\">1</span>\r\n          <div className=\"HomePage__symbol\">\r\n            <img src={CoronaImg} className=\"HomePage__corona\" alt=\"corona\" />\r\n          </div>\r\n          <div className=\"HomePage__image HomePage__image--first\">\r\n            <img className=\"HomePage__imageSrc\" src={KarolPhoto} alt=\"\" />\r\n          </div>\r\n          <span className=\"HomePage__nickname\">Karol</span>\r\n          <span className=\"HomePage__points\">356</span>\r\n        </div>\r\n\r\n        <div className=\"HomePage__secondPlace\">\r\n          <span className=\"HomePage__placeNumber\">2</span>\r\n          <div className=\"HomePage__symbol\">></div>\r\n          <div className=\"HomePage__image\">\r\n            <img className=\"HomePage__imageSrc\" src={JustynaPhoto} alt=\"\" />\r\n          </div>\r\n          <span className=\"HomePage__nickname\">Justyna</span>\r\n          <span className=\"HomePage__points\">124</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Store from \"../../store/store\";\nimport HomePage from \"../HomePage/HomePage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Store>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/our-game-ranking\" component={HomePage} />\n          </Switch>\n        </div>\n      </Store>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './Components/App/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}