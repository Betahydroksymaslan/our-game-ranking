{"version":3,"sources":["firebase/firebase.js","store/store.js","Components/Navigation/Navigation.js","assets/images/kacperPhoto.jpg","assets/images/karolPhoto.jpg","assets/images/justynaPhoto.jpg","assets/images/paulinaPhoto.jpg","assets/images/coronaIcon.svg","Components/HomePage/Leaders/Leaders.js","Components/HomePage/HomePage.js","assets/images/userCogImage.svg","Components/AddUser/AddUser.js","Components/AddGame/AddGame.js","Components/UserCog/Buttons/Buttons.js","assets/images/catanLogo.png","assets/images/monopolyLogo.jpg","Components/AllGames/AllGames.js","Components/UserCog/UserCog.js","Components/App/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AppContext","createContext","Store","children","useState","users","setUsers","firstThree","setFirstThree","restOfUsers","setRestOfUsers","games","setGames","usersByGames","setUsersByGames","firstThreeByGames","setFirstThreeByGames","restOfUsersByGames","setRestOfUsersByGames","useEffect","usersRef","database","ref","gamesRef","on","snapshot","value","val","temoporaryData","id","push","data","sort","a","b","points","firstUsers","slice","restUsers","length","dataByGames","gamePlayed","firstUsersByGames","restUsersByGames","Provider","Navigation","className","to","exact","Leaders","restOfData","placeNumber","location","useLocation","restOfUsersList","map","item","src","paulinaPhoto","alt","profileImage","username","pathname","toFixed","kacperPhoto","CoronaImg","karolPhoto","justynaPhoto","HomePage","useContext","icon","faUsersCog","path","AddUser","setUsername","setProfileImage","onChange","e","target","type","placeholder","onClick","set","AddGame","name","setName","logo","setLogo","firstPlace","setFirstPlace","secondPlace","setSecondPlace","thirdPlace","setThirdPlace","Buttons","AllGames","gameList","catanLogo","UserCog","history","useHistory","goBack","UserCogImage","component","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.34603e83.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCHFG4J2mf_3Axbo8ND7diX2nOZm293gsk\",\r\n  authDomain: \"our-game-ranking.firebaseapp.com\",\r\n  databaseURL: \"https://our-game-ranking-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"our-game-ranking\",\r\n  storageBucket: \"our-game-ranking.appspot.com\",\r\n  messagingSenderId: \"118353229617\",\r\n  appId: \"1:118353229617:web:8fc80354023366c55c6210\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport \"firebase/database\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst Store = ({ children }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [firstThree, setFirstThree] = useState([]);\r\n  const [restOfUsers, setRestOfUsers] = useState([]);\r\n  const [games, setGames] = useState([]);\r\n  const [usersByGames, setUsersByGames] = useState([]);\r\n  const [firstThreeByGames, setFirstThreeByGames] = useState([]);\r\n  const [restOfUsersByGames, setRestOfUsersByGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const usersRef = firebase.database().ref(\"/users\");\r\n    const gamesRef = firebase.database().ref(\"/games\");\r\n\r\n    const watch = () => {\r\n      usersRef.on(\"value\", (snapshot) => {\r\n        const value = snapshot.val();\r\n        const temoporaryData = [];\r\n        for (let id in value) {\r\n          temoporaryData.push(value[id]);\r\n        }\r\n\r\n        /* >>>>>>>>>>> USERS BY POINTS <<<<<<<<<<<<<<<<<< */\r\n\r\n        const data = temoporaryData.sort((a, b) =>\r\n          a.points > b.points ? -1 : 1\r\n        );\r\n        setUsers(data);\r\n\r\n        const firstUsers = temoporaryData.slice(0, 3);\r\n        setFirstThree(firstUsers);\r\n\r\n        const restUsers = temoporaryData.slice(3, temoporaryData.length);\r\n        setRestOfUsers(restUsers);\r\n\r\n        /* >>>>>>>>>>> USERS BY GAMES <<<<<<<<<<<<<<<<<< */\r\n\r\n        const dataByGames = temoporaryData.sort((a, b) =>\r\n          a.points / a.gamePlayed > b.points / b.gamePlayed ? -1 : 1\r\n        );\r\n        setUsersByGames(dataByGames);\r\n\r\n        const firstUsersByGames = dataByGames.slice(0, 3);\r\n        setFirstThreeByGames(firstUsersByGames);\r\n\r\n        const restUsersByGames = dataByGames.slice(3, dataByGames.length);\r\n        setRestOfUsersByGames(restUsersByGames);\r\n\r\n        /* >>>>>>>>>>> USERS BY WINS PERCENTAGE <<<<<<<<<<<<<<<<<< */\r\n      });\r\n\r\n      gamesRef.on(\"value\", (snapshot) => {\r\n        const value = snapshot.val();\r\n        const temoporaryData = [];\r\n        for (let id in value) {\r\n          temoporaryData.push(value[id]);\r\n        }\r\n        setGames(temoporaryData);\r\n      });\r\n    };\r\n\r\n    watch()\r\n  }, []);\r\n\r\n  //console.log(usersByGames, firstThreeByGames, restOfUsersByGames);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        users,\r\n        firstThree,\r\n        restOfUsers,\r\n        games,\r\n        usersByGames,\r\n        firstThreeByGames,\r\n        restOfUsersByGames,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Store;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n    return ( \r\n        <nav className=\"Nav\">\r\n            <NavLink className=\"Nav__link\" to=\"/our-game-ranking/perGame\">\r\n                per games\r\n            </NavLink>\r\n\r\n            <NavLink className=\"Nav__link\" exact to=\"/our-game-ranking\">\r\n                standard\r\n            </NavLink>\r\n\r\n            <NavLink className=\"Nav__link\" to=\"/our-game-ranking/ppg\">\r\n                percentage\r\n            </NavLink>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/kacperPhoto.fea3bf74.jpg\";","export default __webpack_public_path__ + \"static/media/karolPhoto.78bd859a.jpg\";","export default __webpack_public_path__ + \"static/media/justynaPhoto.dc11ff53.jpg\";","export default __webpack_public_path__ + \"static/media/paulinaPhoto.0be90e69.jpg\";","export default __webpack_public_path__ + \"static/media/coronaIcon.ba990780.svg\";","import React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport kacperPhoto from \"../../../assets/images/kacperPhoto.jpg\";\r\nimport karolPhoto from \"../../../assets/images/karolPhoto.jpg\";\r\nimport justynaPhoto from \"../../../assets/images/justynaPhoto.jpg\";\r\nimport paulinaPhoto from \"../../../assets/images/paulinaPhoto.jpg\";\r\nimport CoronaImg from \"../../../assets/images/coronaIcon.svg\";\r\n\r\nconst Leaders = ({ data, restOfData }) => {\r\n  const [placeNumber, setPlaceNumber] = useState(4);\r\n\r\n  const location = useLocation();\r\n  //console.log(location)\r\n\r\n  const restOfUsersList = restOfData.map((item) => (\r\n    <div key={item.username} className=\"HomePage__anotherPlaces\">\r\n      <span className=\"HomePage__placeNumberSpan\">{placeNumber}</span>\r\n      <div className=\"HomePage__anotherPlacesBox\">\r\n        <div className=\"HomePage__anotherPlacesImageWrapper\">\r\n          <img\r\n            src={paulinaPhoto}\r\n            alt={item.profileImage}\r\n            className=\"HomePage__anotherPlacesImage\"\r\n          />\r\n        </div>\r\n        <span className=\"HomePage__anotherPlacesNickname\">{item.username}</span>\r\n        <span className=\"HomePage__anotherPlacesPoints\">\r\n          {location.pathname !== \"/our-game-ranking/perGame\"\r\n            ? item.points\r\n            : (item.points / item.gamePlayed).toFixed(2)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"HomePage__leadersWrapper\">\r\n        <div className=\"HomePage__thirdPlace\">\r\n          <span className=\"HomePage__placeNumber\">3</span>\r\n          <div className=\"HomePage__symbol\">V</div>\r\n          <div className=\"HomePage__image\">\r\n            <img className=\"HomePage__imageSrc\" src={kacperPhoto} />\r\n          </div>\r\n          <span className=\"HomePage__nickname\">\r\n            {data.length && data[2].username}\r\n          </span>\r\n          <span className=\"HomePage__points\">\r\n            {data.length &&\r\n              (location.pathname !== \"/our-game-ranking/perGame\"\r\n                ? data[2].points\r\n                : (data[2].points / data[2].gamePlayed).toFixed(2))}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"HomePage__firstPlace\">\r\n          <span className=\"HomePage__placeNumber\">1</span>\r\n          <div className=\"HomePage__symbol\">\r\n            <img src={CoronaImg} className=\"HomePage__corona\" alt=\"corona\" />\r\n          </div>\r\n          <div className=\"HomePage__image HomePage__image--first\">\r\n            <img className=\"HomePage__imageSrc\" src={karolPhoto} />\r\n          </div>\r\n          <span className=\"HomePage__nickname\">\r\n            {data.length && data[0].username}\r\n          </span>\r\n          <span className=\"HomePage__points\">\r\n          {data.length &&\r\n              (location.pathname !== \"/our-game-ranking/perGame\"\r\n                ? data[0].points\r\n                : (data[0].points / data[0].gamePlayed).toFixed(2))}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"HomePage__secondPlace\">\r\n          <span className=\"HomePage__placeNumber\">2</span>\r\n          <div className=\"HomePage__symbol\">V</div>\r\n          <div className=\"HomePage__image\">\r\n            <img className=\"HomePage__imageSrc\" src={justynaPhoto} />\r\n          </div>\r\n          <span className=\"HomePage__nickname\">\r\n            {data.length && data[1].username}\r\n          </span>\r\n          <span className=\"HomePage__points\">\r\n          {data.length &&\r\n              (location.pathname !== \"/our-game-ranking/perGame\"\r\n                ? data[1].points\r\n                : (data[1].points / data[1].gamePlayed).toFixed(2))}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {restOfUsersList}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Leaders;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUsersCog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport { AppContext } from \"../../store/store\";\r\nimport Leaders from \"./Leaders/Leaders\";\r\n\r\nconst HomePage = () => {\r\n  const { restOfUsers, firstThree, firstThreeByGames, restOfUsersByGames } = useContext(AppContext);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"HomePage\">\r\n        <Link to=\"/our-game-ranking/user\" className=\"HomePage__userCogWrapper\">\r\n          <FontAwesomeIcon className=\"HomePage__userCog\" icon={faUsersCog} />\r\n        </Link>\r\n        <h2 className=\"HomePage__header\">Leaderboard</h2>\r\n        <Navigation />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/our-game-ranking\">\r\n            <Leaders data={firstThree} restOfData={restOfUsers} />\r\n          </Route>\r\n\r\n          <Route exact path=\"/our-game-ranking/perGame\">\r\n            <Leaders data={firstThreeByGames} restOfData={restOfUsersByGames} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export default __webpack_public_path__ + \"static/media/userCogImage.876ff057.svg\";","import React, { useState } from \"react\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport \"firebase/database\";\r\n\r\n\r\nconst AddUser = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [profileImage, setProfileImage] = useState(\"\");\r\n\r\n  const usernameChangeHandle = (e) => setUsername(e.target.value);\r\n  const profileImageChangeHandle = (e) => setProfileImage(e.target.value);\r\n  const submitHandle = () => {\r\n    const usersRef = firebase.database().ref(\"/users/\" + username);\r\n    if (username && profileImage) {\r\n      usersRef.set({\r\n        username,\r\n        profileImage,\r\n        points: 0,\r\n      });\r\n      setUsername('');\r\n      setProfileImage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddUser\">\r\n      <h2 className=\"AddUser__header\">Add User</h2>\r\n\r\n      <label className=\"AddUser__nicknameLabel\">\r\n        Username\r\n        <input\r\n          value={username}\r\n          onChange={usernameChangeHandle}\r\n          type=\"text\"\r\n          className=\"AddUser__nicknameInput\"\r\n        />\r\n      </label>\r\n\r\n      <label className=\"AddUser__userImageLabel\">\r\n        User Image\r\n        <input\r\n          onChange={profileImageChangeHandle}\r\n          value={profileImage}\r\n          type=\"text\"\r\n          placeholder=\"source .jpg\"\r\n          className=\"AddUser__userImageInput\"\r\n        />\r\n      </label>\r\n\r\n      <button onClick={submitHandle} className=\"AddUser__submit\">\r\n        Create\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport \"firebase/database\";\r\n\r\nconst AddGame = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [logo, setLogo] = useState(\"\");\r\n  const [firstPlace, setFirstPlace] = useState(3);\r\n  const [secondPlace, setSecondPlace] = useState(2);\r\n  const [thirdPlace, setThirdPlace] = useState(1);\r\n\r\n  const nameChangeHandle = (e) => setName(e.target.value);\r\n  const logoChangeHandle = (e) => setLogo(e.target.value);\r\n  const firstPlaceChangeHandle = (e) => setFirstPlace(e.target.value);\r\n  const secondPlaceChangeHandle = (e) => setSecondPlace(e.target.value);\r\n  const thirdPlaceChangeHandle = (e) => setThirdPlace(e.target.value);\r\n\r\n  const submitHandle = () => {\r\n    const gamesRef = firebase.database().ref(\"/games/\" + name);\r\n    if (name && logo && firstPlace && secondPlace && thirdPlace) {\r\n      gamesRef.set({\r\n        name,\r\n        logo,\r\n        firstPlace,\r\n        secondPlace,\r\n        thirdPlace,\r\n      });\r\n      setName(\"\");\r\n      setLogo(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddGame\">\r\n      <h2 className=\"AddGame__header\">Add Game</h2>\r\n\r\n      <label className=\"AddGame__nicknameLabel\">\r\n        Name\r\n        <input\r\n          value={name}\r\n          onChange={nameChangeHandle}\r\n          type=\"text\"\r\n          className=\"AddGame__nicknameInput\"\r\n        />\r\n      </label>\r\n\r\n      <label className=\"AddGame__userImageLabel\">\r\n        Logo\r\n        <input\r\n          onChange={logoChangeHandle}\r\n          value={logo}\r\n          type=\"text\"\r\n          placeholder=\"source .jpg\"\r\n          className=\"AddGame__userImageInput\"\r\n        />\r\n      </label>\r\n\r\n      <h2 className=\"AddGame__pointsHeader\">Points</h2>\r\n\r\n      <label className=\"AddGame__pointsLabel\">\r\n        1st place\r\n        <input\r\n          onChange={firstPlaceChangeHandle}\r\n          value={firstPlace}\r\n          type=\"number\"\r\n          className=\"AddGame__pointsInput\"\r\n        />\r\n      </label>\r\n      <label className=\"AddGame__pointsLabel\">\r\n        2nd place\r\n        <input\r\n          onChange={secondPlaceChangeHandle}\r\n          value={secondPlace}\r\n          type=\"number\"\r\n          className=\"AddGame__pointsInput\"\r\n        />\r\n      </label>\r\n\r\n      <label className=\"AddGame__pointsLabel\">\r\n        3rd place\r\n        <input\r\n          onChange={thirdPlaceChangeHandle}\r\n          value={thirdPlace}\r\n          type=\"number\"\r\n          className=\"AddGame__pointsInput\"\r\n        />\r\n      </label>\r\n\r\n      <button onClick={submitHandle} className=\"AddGame__submit\">\r\n        Add game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddGame;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Buttons = () => {\r\n  return (\r\n    <div className=\"Buttons\">\r\n      <h2 className=\"Buttons__header\">User options</h2>\r\n      <Link to=\"/our-game-ranking/addUser\" className=\"Buttons__addUser\">\r\n        Add user\r\n      </Link>\r\n      <Link to=\"/our-game-ranking/addGame\" className=\"Buttons__addGame\">\r\n        Add game\r\n      </Link>\r\n      <Link to=\"/our-game-ranking/allGames\" className=\"Buttons__addGame\">\r\n        Show all games\r\n      </Link>\r\n      <Link to=\"/our-game-ranking/gameSummary\" className=\"Buttons__addGame\">\r\n        Game summary\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","export default __webpack_public_path__ + \"static/media/catanLogo.08f68185.png\";","export default __webpack_public_path__ + \"static/media/monopolyLogo.9085fe01.jpg\";","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../store/store\";\r\nimport monopolyLogo from \"../../assets/images/monopolyLogo.jpg\";\r\nimport catanLogo from \"../../assets/images/catanLogo.png\";\r\n\r\nconst AllGames = () => {\r\n  const { games } = useContext(AppContext);\r\n\r\n    \r\n\r\nconst gameList = games.map(item => (\r\n    <div key={item.name} className=\"AllGames__gameWrapper\">\r\n        <div className=\"AllGames__logoWrapper\">\r\n          <img src={catanLogo} className=\"AllGames__logoImage\" />\r\n        </div>\r\n        <span className=\"AllGames__gameName\">{item.name}</span>\r\n        <span className=\"AllGames__gamePoints\">1st: {item.firstPlace}</span>\r\n        <span className=\"AllGames__gamePoints\">2nd: {item.secondPlace}</span>\r\n        <span className=\"AllGames__gamePoints\">3rd: {item.thirdPlace}</span>\r\n      </div>\r\n))\r\n\r\n  return (\r\n    <div className=\"AllGames\">\r\n      <h2 className=\"AllGames__header\">All Games</h2>\r\n        {games.length && gameList}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllGames;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport UserCogImage from \"../../assets/images/userCogImage.svg\";\r\nimport AddUser from \"../AddUser/AddUser\";\r\nimport AddGame from \"../AddGame/AddGame\";\r\nimport Buttons from \"./Buttons/Buttons\";\r\nimport AllGames from '../AllGames/AllGames';\r\n\r\nconst UserCog = () => {\r\n  const history = useHistory();\r\n\r\n  const goBack = () => history.goBack();\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"UserCog\">\r\n        <div className=\"UserCog__return\" onClick={goBack}></div>\r\n        <img src={UserCogImage} alt=\"image\" className=\"UserCog__image\" />\r\n\r\n        <Switch>\r\n          <Route path=\"/our-game-ranking/user\" component={Buttons} />\r\n          <Route path=\"/our-game-ranking/addUser\" component={AddUser} />\r\n          <Route path=\"/our-game-ranking/addGame\" component={AddGame} />\r\n          <Route path=\"/our-game-ranking/allGames\" component={AllGames} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default UserCog;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Store from \"../../store/store\";\nimport HomePage from \"../HomePage/HomePage\";\nimport UserCog from '../UserCog/UserCog';\n\nfunction App() {\n  return (\n    <Router>\n      <Store>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/our-game-ranking\" component={HomePage} />\n            <Route path=\"/our-game-ranking/user\" component={UserCog} />\n          </Switch>\n        </div>\n      </Store>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './Components/App/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}